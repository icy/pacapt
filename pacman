#!/bin/bash

# Purpose: A wrapper for all Linux package managers
# Author : Anh K. Huynh
# License: Public domain
# Source : http://github.com/icy/pacapt/

_POPT=""    # primary   operation
_SOPT=""    # secondary operation
_TOPT=""    # options for operations
_PKG=""     # packages and extra parameters for apt-get
_VERBOSE="" # verbose mode
_FORCE=""   # force yes
_OSTYPE=""  # type of package manager (Arch pacman, Debian apt, ...)

_error() {
  echo >&2 ":: $*"
}

_help() {
  cat <<\EOF
DESCRIPTION

  An Arch's pacman-like package manager for all Linux distributions.
  Actually this Bash script provides a wrapper for system's package manager.

  Instead of remembering various options/tools on different OSs, you only
  need a common way to manipulate packages. Not all options of the native
  package manager are ported; the tool only provides very basic interface to
  search, install, remove packages and/or update the system.

  Arch's pacman is chosen, as pacman is quite smart when it devides all
  packages-related operations into three major groups: Synchronize, Query
  and Remove/Clean up. It has a clean man page, and it is the only tool
  needed to manipulate official packages on system. (Debian, for example,
  requires you to use apt-get, dpkg and/or aptitude.)

  The tool supports the following types of package manager:

    pacman        by Arch Linux, ArchBang
    dpkg/apt-get  by Debian, Ubuntu
    yum/rpm       by Redhat, CentOS, Fedora Core

INSTALL

  Download the script 'pacman' and install it into /usr/local/bin.
  Example:
    $ wget https://github.com/icy/pacapt/raw/master/pacman -O /usr/local/bin/pacman
    $ chmod 755 /usr/local/bin/pacman

  This script shouldn't be installed on Arch-based system.

SYNTAX

  $ pacman <operation> <option(s)> <packages>

OPERATIONS

  Query

    -Q              list all installed packages
    -Qc <package>   show package's changelog
    -Qi <package>   print package status
    -Ql <package>   list package's files
    -Qm             list installed packages that aren't available
                      in any installation source
    -Qo <file>      query package that provides <file>
    -Qp <file>      query a package file (don't use package database)

  Synchronize

    -S <package>    install package(s)
    -Su             upgrade the system
    -Sy             update package database
    -Ss <package>   search for packages
    -Suy            update package database, then upgrage the system

  Remove / Clean up

    -R <package>    remove some packages
    -Sc             delete old downloaded packages
    -Scc            delete all downloaded packages
    -Sccc           clean variant files.
                    (debian) See more at http://dragula.org/blogs/646

OPTIONS

    -f              force yes
    -v              be verbose
    -w              download packages but don't install them

NOTES

  To install a package from backports repository on Debian system:
              $ pacman -S foobar -t lenny-backports

  Similiarily, any further option which isn't recognized by getopts (1)
  can be passed to system tool.

  When being executed on Arch-based system, the tool simplify invokes
  the system tool '/usr/bin/pacman'. So you would never install this tool
  as '/usr/bin/pacman', otherwise you may break your system!

THANKS

  Special thanks to
    Chau An, Nguyen   (tell me about 'Pacman Rosetta')
    Karol Blazewicz   (comments about '-Sy')

REFERENCES

  1. Pacman Rosetta, https://wiki.archlinux.org/index.php?title=Pacman_Rosetta
EOF
}

_exec_() {
  local _type="$1"
  shift
  [ "$_OSTYPE" = "$_type" ] || return 0
  _error "Going to execute: $* $_VERBOSE $_FORCE"
  eval "$* $_VERBOSE $_FORCE"
}

# Detect package type from /etc/issue
_OSTYPE_detect() {
  grep -qi "Arch Linux"       /etc/issue && _OSTYPE="PACMAN"
  grep -qi "Debian GNU/Linux" /etc/issue && _OSTYPE="DPKG"
  grep -qi "Ubuntu"           /etc/issue && _OSTYPE="DPKG"
  grep -qi "CentOS"           /etc/issue && _OSTYPE="YUM"
  grep -qi "Fedora"           /etc/issue && _OSTYPE="YUM"
  if [ -z "$_OSTYPE" ]; then
    _error "Can't detect OS type from /etc/issue. Running fallback method."
    [ -x "/usr/bin/apt-get" ] && _OSTYPE="DPKG"
    [ -x "/usr/bin/yum" ]     && _OSTYPE="YUM"
  fi
}

# Detect type of package manager. If the system is Arch type,
# pass all arguments to /usr/bin/pacman and return.
_OSTYPE_detect
case "$_OSTYPE" in
  "PACMAN")
    /usr/bin/pacman $*
    exit $?
    ;;
  "YUM"|"DPKG")
    ;;
  *)
    _error "System unsupported. Exit (1)."
    exit 1
    ;;
esac

# Get options from command lines. FIXME: Support long options
while getopts "URQShfvlumyispqwco" opt; do
  case "$opt" in
    Q|S|R|U)
      if [ "$_POPT" != "" -a "$_POPT" != "$opt" ]; then
        _error "Only one operation may be used at a time"
        exit 1
      fi
      _POPT="$opt"
      ;;
    s|l|i|p|q|o|m)
        _SOPT="$opt"
      ;;
    u)
      if [ "${_SOPT:0:1}" = "y" ]; then
        _SOPT="uy"
      else
        _SOPT="u"
      fi
      ;;
    y)
      if [ "${_SOPT:0:1}" = "u" ]; then
        _SOPT="uy"
      else
        _SOPT="y"
      fi
      ;;
    c)
      if [ "${_SOPT:0:2}" = "cc" ]; then
        _SOPT="ccc"
      elif [ "${_SOPT:0:1}" = "c" ]; then
        _SOPT="cc"
      else
        _SOPT="$opt"
      fi
      ;;
    w)
        case "$_OSTYPE" in
          "DPKG") _TOPT="-d" ;;
          "YUM")
              _TOPT="--downloadonly"
              rpm -aq | grep -q downloadonly
              if [ $? -ge 1 ]; then
                _error "Warning: The option '-w' requires you to install the package 'yum-downloadonly'"
                _error "Warning: Please try 'yum install -y yum-downloadonly' or '$0 -S yum-downloadnly' first."
              fi
            ;;
        esac
      ;;
    f)
        case "$_OSTYPE" in
          "DPKG") _FORCE="-f --force-yes" ;;
          "YUM")  _FORCE="-y" ;;
          *)      _FORCE="-y" ;;
        esac
      ;;
    v) _VERBOSE="-v" ;;
    h) _help; exit 0 ;;
  esac
done

# Remained options/packages/queries
shift $((OPTIND - 1))
_PKG="$*"

# Return if no option was specified
if [ -z "$_POPT" ]; then
  _error "No operation specified (use -h for help)"
  exit 1
fi

# Invoke the native package manager
case "$_POPT$_SOPT" in
   "Qi")
        _exec_ DPKG "dpkg-query -s $_PKG"
        _exec_ YUM  "yum info $_PKG"
      ;;
   "Ql")
        _exec_ DPKG "dpkg-query -L $_PKG"
        _exec_ YUM  "rpm -ql $_PKG"
      ;;
   "Qo")
        _exec_ DPKG "dpkg-query -S $_PKG"
        _exec_ YUM  "rpm -qf $_PKG"
      ;;
   "Qp")
        # NOTE: input ($_PKG) should be a package
        _exec_ DPKG "dpkg-deb -I $_PKG"
        _exec_ YUM  "rpm -qp $_PKG"
      ;;
   "Qc")
        _exec_ DPKG "echo 'Error: function not implemented on Debian system'"
        _exec_ YUM  "rpm -q --changelog $_PKG"
      ;;
   "Qu")
        _exec_ DPKG "apt-get upgrade --trivial-only $_PKG"
        _exec_ YUM  "yum list updates $_PKG"
      ;;
   "Qm")
        _exec_ DPKG "echo 'Error: function not implemented on Debian system'"
        _exec_ YUM  "yum list extras $_PKG"
      ;;
    "Q")
        _exec_ DPKG "dpkg -l $_PKG | grep -E ^[hi]i"
        _exec_ YUM  "yum list installed $_PKG"
      ;;
   "Rs")
        _exec_ DPKG "apt-get autoremove $_PKG"
        _exec_ YUM  "yum erase $_PKG"
      ;;
    "R")
        _exec_ DPKG "apt-get remove $_PKG"
        _exec_ YUM  "yum erase $_PKG"
      ;;
  "Suy")
        _VERBOSE="" _exec_ DPKG "apt-get upgrade"
        _VERBOSE="" _exec_ DPKG "apt-get upgrade"
        _exec_ YUM "yum update $_PKG"
      ;;
   "Su")
        _VERBOSE="" _exec_ DPKG "apt-get upgrade"
        _exec_ YUM "yum upgrade $_PKG"
      ;;
   "Sy")
        _VERBOSE="" _exec_ DPKG "apt-get update $_PKG"
        _exec_ YUM "yum check-update $_PKG"
      ;;
   "Ss")
        _exec_ DPKG "apt-cache search $_PKG"
        _exec_ YUM  "yum search $_PKG"
      ;;
   "Sc")
        _exec_ DPKG "apt-get clean"
        _exec_ YUM  "yum clean expire-cache"
      ;;
  "Scc")
        _exec_ DPKG "apt-get autoclean"
        _exec_ YUM  "yum clean packages"
      ;;
 "Sccc")
        _exec_ DPKG "rm -fv /var/cache/apt/*.bin /var/cache/apt/archives/*.* /var/lib/apt/lists/*.*; apt-get autoclean"
        _exec_ YUM  "yum clean all"
      ;;
    "S")
        if [ -z "$_PKG" ]; then
          _error "You must specify a package"
          exit 1
        else
          _exec_ DPKG "apt-get install $_TOPT $_PKG"
          _exec_ YUM  "yum install $_TOPT $_PKG"
        fi
      ;;
  "U")
        _exec_ DPKG "echo 'Error: function not implemented on Debian system'"
        _exec_ YUM  "yum localinstall"
      ;;
esac
